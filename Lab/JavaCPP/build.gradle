buildscript {
    ext {
        kotlin_version = "1.1.3"
        bugvm_version = "1.2.4-SNAPSHOT"
    }
    repositories {
        mavenLocal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
        mavenCentral()
    }

    dependencies {
        classpath "com.bugvm:bugvm-gradle:${bugvm_version}"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
    }
}

apply plugin: "bugvm"
apply plugin: "kotlin"
apply plugin: "application"

repositories {
    mavenLocal()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    mavenCentral()
}

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}")
    compile("com.bugvm:javacpp:${bugvm_version}")
    compile("com.bugvm:bugvm-macos:${bugvm_version}")
    compile("com.bugvm:bugvm-macos:${bugvm_version}:macosx-x86_64")
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.5"
    distributionType = Wrapper.DistributionType.ALL
}
//
//jar {
//    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
//    exclude "META-INF/*.RSA", "META-INF/*.SF","META-INF/*.DSA","META-INF/maven/**"
//    manifest {
//        attributes "Main-Class": "javacpp"
//        attributes "Implementation-Version" : project.version
//    }
//}

run {
    mainClassName = "ExampleDGEMMrowmajor"
}
//
//defaultTasks "javacpp"
//task javacpp(type: JavaExec) {
//    classpath = sourceSets.main.runtimeClasspath
//    main = "javacpp"
//    args = ["NativeLibrary", "-d", project.file("native") ]
//}
//
//clean {
//    delete "bin"
//}
//
//test {
//    //exclude "**/Core*"
//    testLogging {
//        events "passed", "skipped", "failed", "standardOut", "standardError"
//    }
//}